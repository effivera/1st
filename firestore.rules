
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow users to create their own user document upon signup
      // Allow users to read their own user document
      allow create, read: if isOwner(userId);

      // Allow users to update their own profile information
      allow update: if isOwner(userId);
    }

    // Rules for equipment listings
    match /equipment/{equipmentId} {
      // Anyone can read equipment listings
      allow read: if true;
      // Owners can create, update, and delete their own equipment listings
      allow create, update, delete: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
    }

    // Rules for produce listings
    match /produceListings/{listingId} {
        // Anyone can read produce listings
        allow read: if true;
        // Farmers can create, update, and delete their own listings
        allow create, update, delete: if request.auth != null && request.resource.data.farmerId == request.auth.uid;
    }

    // Rules for bookings
    match /bookings/{bookingId} {
        // The farmer who made the booking or the owner of the equipment can read it
        allow read: if request.auth != null && (isOwner(resource.data.farmerId) || isOwner(resource.data.ownerId));
        // Farmers can create bookings
        allow create: if request.auth != null && isOwner(request.resource.data.farmerId);
        // The owner can update the status of a booking (confirm/cancel)
        allow update: if request.auth != null && isOwner(resource.data.ownerId);
    }

     // Rules for carbon credits
    match /carbonCredits/{creditId} {
      // A user can only read their own carbon credit document
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}
